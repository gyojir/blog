{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/91sCekmFE/","result":{"data":{"markdownRemark":{"id":"3c847802-65ad-5084-854e-6b6c48dc476f","excerpt":"livedoorブログをやめて Gatsby + github pages にブログを移行しました。 候補としてはGatsbyのほかにHexo,Hugo,jekyll等があったのですが、\r\n使い慣れたnode.js環境で作りたいという点と、Reactが多少分かること、GatsbyのGraphQL…","html":"<p>livedoorブログをやめて Gatsby + github pages にブログを移行しました。</p>\n<p>候補としてはGatsbyのほかにHexo,Hugo,jekyll等があったのですが、\r\n使い慣れたnode.js環境で作りたいという点と、Reactが多少分かること、GatsbyのGraphQLを使ったアプローチが\r\nユニークであったことからGatsbyを選択しました。</p>\n<p>Gatsbyについての解説は調べればいくらでもあるので自分は説明しません。<br>\n以下のページが参考になりました。</p>\n<ul>\n<li><a href=\"https://diff001a.netlify.com/gatsby-blog-with-markdown/\">Gatsby + Markdownでブログを作り直しました</a></li>\n<li><a href=\"https://gotohayato.com/content/502/\">Gatsby で gatsby-theme-blog を使うときの tips</a></li>\n</ul>\n<h2 id=\"やったこと\">やったこと</h2>\n<p>自分のブログでは<a href=\"https://github.com/gatsbyjs/gatsby-starter-blog.git\">gatsby-starter-blog</a>を使いました。</p>\n<h3 id=\"マークダウンのfront-matterにidとtagsを追加\">マークダウンのfront-matterにidとtagsを追加</h3>\n<p>マークダウンは以下のようになりました。</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token punctuation\">---</span>\r\n<span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> 91sCekmFE\r\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Gatsbyでブログを作り直しました\r\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2020-04-18T14:43:03.573Z\"</span>\r\n<span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span>\r\n<span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"gatsby\"</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">---</span></code></pre></div>\n<br>\n<p>マークダウンを扱えるようにするgatsby-transformer-remarkプラグインは、Nodeの作成時に全てのfront-matterから項目を取り出して\r\nGraphQLスキーマを作成しているようなのですが、全てのtagsが空の配列であったりtagsが書いてあるmdが1つもない場合などは型推論ができず、\r\nスキーマに登録されません。<br>\nスキーマに登録されていない項目をGraphQLで取得しようとするとcreatePages()でエラーになってしまいます。<br>\nそのため <a href=\"https://www.gatsbyjs.org/docs/schema-customization/#nested-types\">https://www.gatsbyjs.org/docs/schema-customization/#nested-types</a> を参考にして、gatsby-node.jsに以下のコードを追記しました。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createSchemaCustomization</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> actions<span class=\"token punctuation\">,</span> schema <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createTypes <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions\r\n\r\n  <span class=\"token keyword\">const</span> typeDefs <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n    type MarkdownRemark implements Node {\r\n      frontmatter: Frontmatter\r\n    }\r\n    type Frontmatter {\r\n      tags: [String!]!\r\n    }\r\n  </span><span class=\"token template-punctuation string\">`</span></span>\r\n  <span class=\"token function\">createTypes</span><span class=\"token punctuation\">(</span>typeDefs<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h3 id=\"タグページの追加\">タグページの追加</h3>\n<p>以下のページを参考にしました。<br>\n<a href=\"https://gotohayato.com/content/502/#tips-06-%E3%82%BF%E3%82%B0%E3%83%9A%E3%83%BC%E3%82%B8%EF%BC%88%E3%82%BF%E3%82%B0%E5%88%A5%E3%81%AE%E6%8A%95%E7%A8%BF%E4%B8%80%E8%A6%A7%E3%83%9A%E3%83%BC%E3%82%B8%EF%BC%89%E3%82%92%E4%BD%9C%E3%82%8A%E3%81%9F%E3%81%84\">Gatsby で gatsby-theme-blog を使うときの tips</a></p>\n<br>\n<h3 id=\"記事URLスラッグの変更\">記事URL(スラッグ)の変更</h3>\n<p>gatsby-starter-blogのデフォルトでは /path/to/post という感じのURLだったのですが、これだと</p>\n<ul>\n<li>記事を管理するためのファイル名がURLになってしまう</li>\n<li>ファイル構成を変更するとURLが変わってしまう</li>\n<li>記事の日本語タイトルとURL用英語タイトルを考える必要がある</li>\n<li>後々変な英語が気になっても直しにくい</li>\n</ul>\n<p>という点から、front-matterに設定したidを使って /posts/id　という形式に変更しました。\r\nこれでファイル名に関してはある程度自由に管理しやすいように決めることができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">exports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onCreateNode</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> actions<span class=\"token punctuation\">,</span> getNode <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createNodeField <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions\r\n\r\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">MarkdownRemark</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>id\r\n    <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/posts/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\r\n    \r\n    <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">slug</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\r\n      node<span class=\"token punctuation\">,</span>\r\n      value<span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n</code></pre></div>\n<br>\n<h3 id=\"記事ファイルの自動生成\">記事ファイルの自動生成</h3>\n<p>front-matterのidをURLに使っているので、記事を新しく作るときには必ず一意なidを設定する必要があります。\r\nまた、記事を作成したときの日付も自動で入力したいです。</p>\n<p>テンプレートから自動でファイルを生成する方法はいろいろあります。</p>\n<ul>\n<li><a href=\"https://yeoman.io/\">Yeoman</a>, <a href=\"https://github.com/yeoman/generator-generator\">generator-generator</a>\n<ul>\n<li>Yeoman用の自作generatorをgenerator-generatorで作成する</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/cats-oss/scaffdog\">scaffdog</a>\n<ul>\n<li>1つのマークダウンファイルで複数ファイルのテンプレートを定義できる</li>\n</ul>\n</li>\n<li>自作する</li>\n</ul>\n<p>初めはscaffdogが良さそうだと思い試したのですが、テンプレート内でevalは使えるものの、\r\nid生成のように外部ライブラリを使いたい場合には向いていないようなので選択肢から外しました。</p>\n<p>yeomanにしようかとも思ったのですが、ちょっとしたテンプレートエンジンくらいなら割と手軽に作れそうなので自作することにしました。<br>\n↓のページ<br>\n<a href=\"https://www.webprofessional.jp/scaffolding-tool-caporal-js/\">うんざりするような下準備をJavaScriptで自動化してラクをする方法</a><br>\nがとても参考になりました。</p>\n<p>仕様自体はscaffdogを参考にして、templateフォルダに置いた以下のようなyamlファイルからファイルを生成するようにしました。\r\n<a href=\"https://github.com/gyojir/blog/blob/2e460f68d23eaeee48fd5ea28587ffdd284c8242/scaffold/create.js\">ソースはこんな感じ</a></p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">variables</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token punctuation\">-</span> name\r\n<span class=\"token key atrule\">files</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> content/blog/%name%/index.md\r\n    <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\r\n      ---\r\n      id: %__id%\r\n      title: %name%\r\n      date: \"%__date%\"\r\n      description: \"\"\r\n      tags: []\r\n      ---</span></code></pre></div>\n<br>\r\n<br>\n<p>今のところそれなりに満足しています。<br>\n以上です。</p>","frontmatter":{"title":"Gatsbyでブログを作り直しました","date":"2020-04-19T01:35:21.992+09:00","description":"","tags":["gatsby"]}}},"pageContext":{"slug":"/posts/91sCekmFE","previous":{"fields":{"slug":"/posts/TQBUrnPsW"},"frontmatter":{"title":"いつの間にこんなものが…"}},"next":{"fields":{"slug":"/posts/zE0WNjSHa"},"frontmatter":{"title":"フルボディIKのデモプログラムを作りました"}}}},"staticQueryHashes":["2841359383","3115688470","3159585216","523898683","998201107"],"slicesMap":{}}